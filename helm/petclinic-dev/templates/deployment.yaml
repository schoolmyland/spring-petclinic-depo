apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: customers-service
  name: customers-service
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customers-service
  strategy: {}
  template:
    metadata:
      labels:
        app: customers-service
    spec:
      containers:
      - image: {{ .Values.cust.repo }}/spring-petclinic-customers-service:{{ .Values.cust.docker_tag }}
        name: customers-service
        imagePullPolicy: {{ .Values.cust.pull }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 15
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 500m
            memory: 1Gi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://{{ .Values.petclinic.dbhost }}/{{ .Values.petclinic.dbname }}?queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName=customers-db
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.petclinic.dbuser }}
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
             secretKeyRef:
               name: petclinic-db-mysql
               key: mysql-user-password
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
          value: proxy://wavefront-proxy.spring-petclinic.svc.cluster.local:2878
        ports:
        - containerPort: 8080
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: visits-service
  name: visits-service
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: visits-service
  strategy: {}
  template:
    metadata:
      labels:
        app: visits-service
    spec:
      containers:
      - image: {{ .Values.vist.repo }}/spring-petclinic-visits-service:{{ .Values.vist.docker_tag }}
        name: visits-service
        imagePullPolicy: {{ .Values.vist.pull }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 15
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 500m
            memory: 1Gi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://{{ .Values.petclinic.dbhost }}/{{ .Values.petclinic.dbname }}?queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName=visits-db
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.petclinic.dbuser }}
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
             secretKeyRef:
               name: petclinic-db-mysql
               key: mysql-user-password
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
          value: proxy://wavefront-proxy.spring-petclinic.svc.cluster.local:2878
        ports:
        - containerPort: 8080
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vets-service
  name: vets-service
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vets-service
  strategy: {}
  template:
    metadata:
      labels:
        app: vets-service
    spec:
      containers:
      - image: {{ .Values.vets.repo }}/spring-petclinic-vets-service:{{ .Values.vets.docker_tag }}
        name: vets-service
        imagePullPolicy: {{ .Values.vets.pull }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 15
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 500m
            memory: 1Gi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://{{ .Values.petclinic.dbhost }}/{{ .Values.petclinic.dbname }}?queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName=vets-db
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.petclinic.dbuser }}
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
             secretKeyRef:
               name: petclinic-db-mysql
               key: mysql-user-password
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
          value: proxy://wavefront-proxy.spring-petclinic.svc.cluster.local:2878
        ports:
        - containerPort: 8080
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy: {}
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - image: {{ .Values.gatw.repo }}/spring-petclinic-api-gateway:{{ .Values.gatw.docker_tag }}
        name: api-gateway
        imagePullPolicy: {{ .Values.gatw.pull }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 15
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 500m
            memory: 1Gi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
          value: proxy://wavefront-proxy.spring-petclinic.svc.cluster.local:2878
        ports:
        - containerPort: 8080
      restartPolicy: Always
status: {}
